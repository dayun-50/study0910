<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Spring]]></title><description><![CDATA[Level up your Java code and explore what Spring can do for you.]]></description><link>https://spring.io</link><generator>GatsbyJS</generator><lastBuildDate>Tue, 09 Sep 2025 22:26:37 GMT</lastBuildDate><item><title><![CDATA[Access API Moves to Spring Security Access]]></title><link>https://spring.io/blog/2025/09/09/access-api-moves-to-spring-security-access</link><guid isPermaLink="true">https://spring.io/blog/2025/09/09/access-api-moves-to-spring-security-access</guid><dc:creator><![CDATA[jzheaux]]></dc:creator><pubDate>Tue, 09 Sep 2025 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;https://github.com/spring-projects/spring-security/commit/34b4b1054fe11f43436dec9c93623db8338b3ac9&quot;&gt;Five years ago&lt;/a&gt;, Spring Security began the journey of modernizing &lt;a href=&quot;https://docs.spring.io/spring-security/reference/features/authorization/index.html&quot;&gt;its authorization API&lt;/a&gt;.
This has paved the way for a number of exciting features like &lt;a href=&quot;https://docs.spring.io/spring-security/reference/servlet/authorization/method-security.html#authorize-object&quot;&gt;Authorized POJOs&lt;/a&gt;, &lt;a href=&quot;https://docs.spring.io/spring-security/reference/servlet/authorization/method-security.html#fallback-values-authorization-denied&quot;&gt;value masking&lt;/a&gt;, and, planned for Spring Security 7, &lt;a href=&quot;https://github.com/spring-projects/spring-security/pull/17775&quot;&gt;Multi-Factor Authentication&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This also deprecated the majority of the Access API.
The Access API compromises the family of components in the Spring Security &lt;code&gt;access&lt;/code&gt; packages; for example, &lt;code&gt;AccessDecisionManager&lt;/code&gt;, &lt;code&gt;AccessDecisionVoter&lt;/code&gt;, and &lt;code&gt;FilterSecurityInterceptor&lt;/code&gt;.
It also includes &lt;code&gt;@EnableGlobalMethodSecurity&lt;/code&gt; and other related configuration components.&lt;/p&gt;
&lt;p&gt;The numerous benefits to this evolution are detailed on Spring Security&apos;s reference guide.
It also includes &lt;a href=&quot;https://docs.spring.io/spring-security/reference/servlet/authorization/authorize-http-requests.html#migrate-authorize-requests&quot;&gt;a number of&lt;/a&gt; &lt;a href=&quot;https://docs.spring.io/spring-security/reference/servlet/authorization/method-security.html#migration-enableglobalmethodsecurity&quot;&gt;migration hints&lt;/a&gt; for moving from one API to the other.&lt;/p&gt;
&lt;p&gt;In order to give more time to organizations to migrate while also further encouraging updating to the latest, Spring Security 7.0.0-M3 will introduce a new module, &lt;code&gt;spring-security-access&lt;/code&gt;, which will contain the deprecated portions of the Access API.&lt;/p&gt;
&lt;p&gt;This is an optional dependency, and is only needed if you are still using &lt;code&gt;AccessDecisionManager&lt;/code&gt;, &lt;code&gt;AccessDecisionVoter&lt;/code&gt;, &lt;code&gt;FilterSecurityInterceptor&lt;/code&gt;, &lt;code&gt;@EnableGlobalMethodSecurity&lt;/code&gt; and the like.
In this case, you can add &lt;code&gt;spring-security-access&lt;/code&gt; as a dependency in your POM:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;&amp;#x3C;dependency&gt;
    &amp;#x3C;groupId&gt;org.springframework.security&amp;#x3C;/groupId&gt;
    &amp;#x3C;artifactId&gt;spring-security-access&amp;#x3C;/artifactId&gt;
&amp;#x3C;/dependency&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you are already using &lt;code&gt;AuthorizationManager&lt;/code&gt;, then your application needn&apos;t change.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Core Spring Resilience Features: @ConcurrencyLimit, @Retryable, and RetryTemplate]]></title><link>https://spring.io/blog/2025/09/09/core-spring-resilience-features</link><guid isPermaLink="true">https://spring.io/blog/2025/09/09/core-spring-resilience-features</guid><dc:creator><![CDATA[sbrannen]]></dc:creator><pubDate>Tue, 09 Sep 2025 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;This is the first blog post in the &lt;a href=&quot;https://spring.io/blog/2025/09/02/road_to_ga_introduction&quot;&gt;Road to GA&lt;/a&gt; series, highlighting major features within the Spring portfolio for the &lt;a href=&quot;https://spring.io/blog/2024/10/01/from-spring-framework-6-2-to-7-0&quot;&gt;next major versions to be released in November&lt;/a&gt; of this year.&lt;/p&gt;
&lt;p&gt;Today we are proud to announce the new &lt;em&gt;resilience&lt;/em&gt; features coming in Spring Framework 7.0: &lt;strong&gt;concurrency throttling&lt;/strong&gt; and &lt;strong&gt;retry support&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&quot;concurrency-throttling&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#concurrency-throttling&quot; aria-label=&quot;concurrency throttling permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Concurrency Throttling&lt;/h2&gt;
&lt;p&gt;For certain tasks and resources it may be desirable to limit the level of concurrency. Concurrency throttling effectively protects the target resource from being accessed from too many threads at the same time, similar to the effect of a pool size limit for a thread pool or a connection pool that blocks access if its limit is reached. Such limiting is particularly useful with Virtual Threads where there is generally no thread pool limit in place.&lt;/p&gt;
&lt;p&gt;For asynchronous tasks, this can be constrained via the &lt;code&gt;concurrencyLimit&lt;/code&gt; property on Spring Framework&apos;s &lt;code&gt;SimpleAsyncTaskExecutor&lt;/code&gt;. For synchronous invocations, this can be constrained via the &lt;code&gt;concurrencyLimit&lt;/code&gt; property on Spring Framework&apos;s &lt;code&gt;ConcurrencyThrottleInterceptor&lt;/code&gt; which has existed since Spring Framework 1.0 for programmatic use with the AOP framework.&lt;/p&gt;
&lt;p&gt;With Spring Framework 7.0, configuring a concurrency limit for a given method invocation has become much easier. Simply annotate a method in a Spring-managed component with &lt;code&gt;@ConcurrencyLimit&lt;/code&gt; and annotate a &lt;code&gt;@Configuration&lt;/code&gt; class with &lt;code&gt;@EnableResilientMethods&lt;/code&gt; to enable automatic throttling. Alternatively, &lt;code&gt;@ConcurrencyLimit&lt;/code&gt; can be declared at the type level to have it applied to all proxy-invoked methods in a given class hierarchy, and &lt;code&gt;@ConcurrencyLimit&lt;/code&gt; can be explicitly enabled by defining a &lt;code&gt;ConcurrencyLimitBeanPostProcessor&lt;/code&gt; bean in the context.&lt;/p&gt;
&lt;p&gt;The following example sets the concurrency limit to 10 for the &lt;code&gt;sendNotification()&lt;/code&gt; method.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;@ConcurrencyLimit(10)
public void sendNotification() {
    this.jmsClient.destination(&quot;notifications&quot;).send(...);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You may optionally set the limit to 1, effectively locking access to the target bean instance.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;@ConcurrencyLimit(1) // 1 is the default, but specifying it makes it clearer
public void sendNotification() {
    this.jmsClient.destination(&quot;notifications&quot;).send(...);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;retry-support&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#retry-support&quot; aria-label=&quot;retry support permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Retry Support&lt;/h2&gt;
&lt;p&gt;As the &lt;a href=&quot;https://en.wikipedia.org/wiki/William_Edward_Hickson&quot;&gt;saying&lt;/a&gt; goes: &lt;em&gt;If at first you don&apos;t succeed, try, try, try again.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Luckily, that sometimes applies to errors in software applications as well: certain categories of errors can often be successfully retried.&lt;/p&gt;
&lt;p&gt;Historically, the Spring community has relied on the &lt;a href=&quot;https://github.com/spring-projects/spring-retry&quot;&gt;Spring Retry&lt;/a&gt; project for various forms of retry support. However, this year we decided to incorporate core retry support at the lowest level of the Spring portfolio, in Spring Framework itself. This support was naturally inspired by the Spring Retry project, but we completely redesigned it as a minimal set of core retry features in the &lt;code&gt;spring-core&lt;/code&gt; and &lt;code&gt;spring-context&lt;/code&gt; modules.&lt;/p&gt;
&lt;h3 id=&quot;declaritive-retry-with-retryable&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#declaritive-retry-with-retryable&quot; aria-label=&quot;declaritive retry with retryable permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Declaritive Retry with @Retryable&lt;/h3&gt;
&lt;p&gt;For declarative retry support, you can annotate a method in a Spring-managed component with &lt;code&gt;@Retryable&lt;/code&gt; and annotate a &lt;code&gt;@Configuration&lt;/code&gt; class with &lt;code&gt;@EnableResilientMethods&lt;/code&gt; to enable automatic retry support. Alternatively, &lt;code&gt;@Retryable&lt;/code&gt; can be declared at the type level to have it applied to all proxy-invoked methods in a given class hierarchy, and &lt;code&gt;@Retryable&lt;/code&gt; can be explicitly enabled by defining a &lt;code&gt;RetryAnnotationBeanPostProcessor&lt;/code&gt; bean in the context.&lt;/p&gt;
&lt;p&gt;By default, the method invocation will be retried for any exception thrown: with at most 3 retry attempts after an initial failure, and a delay of 1 second between attempts.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;@Retryable
public void sendNotification() {
    this.jmsClient.destination(&quot;notifications&quot;).send(...);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can optionally constrain the types of exceptions that trigger a retry via the &lt;code&gt;includes&lt;/code&gt;, &lt;code&gt;excludes&lt;/code&gt;, and implicit &lt;code&gt;value&lt;/code&gt; attributes in &lt;code&gt;@Retryable&lt;/code&gt;, as demonstrated below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;@Retryable(MessageDeliveryException.class)
public void sendNotification() {
    this.jmsClient.destination(&quot;notifications&quot;).send(...);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that &lt;code&gt;@Retryable(MessageDeliveryException.class)&lt;/code&gt; is a shortcut for &lt;code&gt;@Retryable(includes = {MessageDeliveryException.class})&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The following example demonstrates how to configure 5 retry attempts and an exponential back-off strategy with a bit of jitter.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;@Retryable(
  includes = MessageDeliveryException.class,
  maxAttempts = 5,
  delay = 100,
  jitter = 10,
  multiplier = 2,
  maxDelay = 1000)
public void sendNotification() {
    this.jmsClient.destination(&quot;notifications&quot;).send(...);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;Some features of the core retry support in Spring Framework may differ from features that you are familar with in Spring Retry. For example, the value for the &lt;code&gt;maxAttempts&lt;/code&gt; attribute in Spring Retry&apos;s &lt;code&gt;@Retryable&lt;/code&gt; annotation applies to the initial invocation of the retryable operation as well as the retry attempts; whereas, &lt;code&gt;maxAttempts&lt;/code&gt; in Spring Framework only applies to the actual &lt;em&gt;retry&lt;/em&gt; attempts.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Last but not least, &lt;code&gt;@Retryable&lt;/code&gt; in Spring Framework also works for reactive methods with a reactive return type, automatically decorating the pipeline with Reactor&apos;s retry capabilities.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;@Retryable(maxAttempts = 5, delay = 100)
public Mono&amp;#x3C;Void&gt; sendNotification() {
    return Mono.from(...); // This Mono will get decorated with a retry spec.
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;programmatic-retry-with-retrytemplate&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#programmatic-retry-with-retrytemplate&quot; aria-label=&quot;programmatic retry with retrytemplate permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Programmatic Retry with RetryTemplate&lt;/h3&gt;
&lt;p&gt;In contrast to &lt;code&gt;@Retryable&lt;/code&gt; which provides a declarative approach for specifying retry semantics for individual methods, &lt;code&gt;RetryTemplate&lt;/code&gt; provides a programmatic API for retrying arbitrary blocks of code. Specifically, a &lt;code&gt;RetryTemplate&lt;/code&gt; executes and potentially retries a &lt;code&gt;Retryable&lt;/code&gt; operation based on a configured &lt;code&gt;RetryPolicy&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;// Implicitly uses RetryPolicy.withDefaults()
var retryTemplate = new RetryTemplate();

retryTemplate.execute(() -&gt; jmsClient.destination(&quot;notifications&quot;).send(...));
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As with &lt;code&gt;@Retryable&lt;/code&gt;, by default a &lt;code&gt;Retryable&lt;/code&gt; operation will be retried for any exception thrown: with at most 3 retry attempts after an initial failure, and a delay of 1 second between attempts. If you only need to customize the number of retry attempts, you can use the &lt;code&gt;RetryPolicy.withMaxAttempts()&lt;/code&gt; factory method as demonstrated below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;var retryTemplate = new RetryTemplate(RetryPolicy.withMaxAttempts(5));

retryTemplate.execute(() -&gt; jmsClient.destination(&quot;notifications&quot;).send(...));
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you need to narrow the types of exceptions to retry, that can be achieved via the &lt;code&gt;includes()&lt;/code&gt;, &lt;code&gt;excludes()&lt;/code&gt;, and &lt;code&gt;predicate()&lt;/code&gt; builder methods.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;var retryPolicy = RetryPolicy.builder()
        .includes(MessageDeliveryException.class)
        // .excludes(...)
        // .predicate(...)
        .build();

var retryTemplate = new RetryTemplate(retryPolicy);

retryTemplate.execute(() -&gt; jmsClient.destination(&quot;notifications&quot;).send(...));
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And as with &lt;code&gt;@Retryable&lt;/code&gt;, you also have the ability to fully configure a &lt;code&gt;RetryPolicy&lt;/code&gt; ? for example, with max retry attempts and an exponential back-off strategy.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;var retryPolicy = RetryPolicy.builder()
        .includes(MessageDeliveryException.class)
        .maxAttempts(5)
        .delay(Duration.ofMillis(100))
        .jitter(Duration.ofMillis(10))
        .multiplier(2)
        .maxDelay(Duration.ofSeconds(1))
        .build();

var retryTemplate = new RetryTemplate(retryPolicy);

retryTemplate.execute(() -&gt; jmsClient.destination(&quot;notifications&quot;).send(...));
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;impacts-on-the-spring-portfolio&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#impacts-on-the-spring-portfolio&quot; aria-label=&quot;impacts on the spring portfolio permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Impacts on the Spring Portfolio&lt;/h2&gt;
&lt;p&gt;When you upgrade to the upcoming major releases for various Spring portfolio projects, you will notice that several projects have already migrated from Spring Retry support to the new core retry support in Spring Framework. For details, see the related GitHub issues and pull requests for the following projects.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/spring-projects/spring-boot/issues/46309&quot;&gt;Spring Boot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/spring-projects/spring-batch/issues/4868&quot;&gt;Spring Batch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/spring-projects/spring-integration/issues/10345&quot;&gt;Spring Integration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/spring-projects/spring-amqp/pull/3167&quot;&gt;Spring AMQP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/spring-projects/spring-kafka/pull/4059&quot;&gt;Spring for Apache Kafka&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/spring-projects/spring-pulsar/issues/1224&quot;&gt;Spring for Apache Pulsar&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;next-steps&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#next-steps&quot; aria-label=&quot;next steps permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Next Steps&lt;/h2&gt;
&lt;p&gt;We encourage you to try out these new features in your projects and provide us feedback!&lt;/p&gt;
&lt;p&gt;For further details, please check out the &lt;a href=&quot;https://docs.spring.io/spring-framework/reference/7.0-SNAPSHOT/core/resilience.html&quot;&gt;resilience features&lt;/a&gt; section of the reference manual as well as the Javadoc in the &lt;a href=&quot;https://docs.spring.io/spring-framework/docs/7.0.0-SNAPSHOT/javadoc-api/org/springframework/core/retry/package-summary.html&quot;&gt;org.springframework.core.retry&lt;/a&gt; and &lt;a href=&quot;https://docs.spring.io/spring-framework/docs/7.0.0-SNAPSHOT/javadoc-api/org/springframework/resilience/annotation/package-summary.html&quot;&gt;org.springframework.resilience.annotation&lt;/a&gt; packages.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Spring AI 1.1.0-M1 Available Now]]></title><link>https://spring.io/blog/2025/09/09/spring-ai-1-1-0-M1-available-now</link><guid isPermaLink="true">https://spring.io/blog/2025/09/09/spring-ai-1-1-0-M1-available-now</guid><dc:creator><![CDATA[markpollack]]></dc:creator><pubDate>Tue, 09 Sep 2025 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;On behalf of the Spring AI engineering team and everyone who has contributed, I&apos;m happy to announce that Spring AI &lt;code&gt;1.1.0-M1&lt;/code&gt; has been released and is now available from Maven Central.&lt;/p&gt;
&lt;p&gt;This milestone release delivers important stability improvements and bug fixes.&lt;/p&gt;
&lt;h2 id=&quot;release-summary&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#release-summary&quot; aria-label=&quot;release summary permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Release Summary&lt;/h2&gt;
&lt;p&gt;This release includes &lt;a href=&quot;https://github.com/spring-projects/spring-ai/releases/tag/v1.1.0-M1&quot;&gt;391 improvements, bug fixes, and documentation updates&lt;/a&gt;. The focus of this milestone release is on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Improvements&lt;/strong&gt;: 271 enhancements to expand capabilities and functionality&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Stability&lt;/strong&gt;: 76 bug fixes addressing community-reported issues&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: 32 improvements to help developers&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt;: 12 dependency upgrades for enhanced security&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thanks to all those who have contributed with issue reports and pull requests.&lt;/p&gt;
&lt;h2 id=&quot;key-highlights&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#key-highlights&quot; aria-label=&quot;key highlights permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Key Highlights&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Model Context Protocol Integration&lt;/strong&gt; - Comprehensive MCP support for AI agent development:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;MCP Java SDK v0.12.1 Foundation&lt;/strong&gt; (&lt;a href=&quot;https://modelcontextprotocol.io/sdk/java/mcp-overview&quot;&gt;SDK docs&lt;/a&gt;) - Upgraded from v0.10.0 with support for MCP specification versions 2025-3-26 (Streamable HTTP) and 2024-11-05 (SSE) and including some features from the latest 2025-06-18, bringing Streamable HTTP transport, HttpClient/WebClient, WebMVC/WebFlux/Servlet support, Transport Context APIs, enhanced resource template filtering, and MCP-compliant protocol version headers&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Spring AI Auto-Configuration &amp;#x26; Annotations&lt;/strong&gt; (&lt;a href=&quot;https://docs.spring.io/spring-ai/reference/1.1-SNAPSHOT/api/mcp/mcp-client-boot-starter-docs.html&quot;&gt;client docs&lt;/a&gt;, &lt;a href=&quot;https://docs.spring.io/spring-ai/reference/1.1-SNAPSHOT/api/mcp/mcp-server-boot-starter-docs.html&quot;&gt;server docs&lt;/a&gt;, &lt;a href=&quot;https://docs.spring.io/spring-ai/reference/1.1-SNAPSHOT/api/mcp/mcp-annotations-overview.html&quot;&gt;annotations&lt;/a&gt;) - Complete Spring Boot integration with multiple &lt;a href=&quot;https://docs.spring.io/spring-ai/reference/1.1-SNAPSHOT/api/mcp/mcp-client-boot-starter-docs.html#_starters&quot;&gt;MCP Client&lt;/a&gt; and &lt;a href=&quot;https://docs.spring.io/spring-ai/reference/1.1-SNAPSHOT/api/mcp/mcp-server-boot-starter-docs.html#_mcp_server_boot_starters&quot;&gt;MCP Server&lt;/a&gt; Boot Starters, automatic client/server lifecycle management, and new annotation-based programming model with &lt;code&gt;@McpTool&lt;/code&gt;, &lt;code&gt;@McpResource&lt;/code&gt;, &lt;code&gt;@McpPrompt&lt;/code&gt;, etc. for declarative MCP development.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Expanded Model Support&lt;/strong&gt; - Comprehensive integration for next-generation AI models:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Google GenAI SDK Integration&lt;/strong&gt; (&lt;a href=&quot;https://docs.spring.io/spring-ai/reference/1.1.0-M1/api/chat/google-genai-chat.html&quot;&gt;documentation&lt;/a&gt;) - Thanks to &lt;a href=&quot;https://github.com/ddobrin&quot;&gt;Dan Dobrin&apos;s&lt;/a&gt; outstanding contribution, Spring AI now includes Google&apos;s unified GenAI SDK with dual authentication support (API keys for prototyping, Google Cloud credentials for production), covering Gemini Pro, 1.5 Pro, and 2.0 Flash models with full tool calling and multimodal capabilities&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Anthropic Claude Prompt Caching&lt;/strong&gt; (&lt;a href=&quot;https://docs.spring.io/spring-ai/reference/1.1-SNAPSHOT/api/chat/anthropic-chat.html#_prompt_caching&quot;&gt;documentation&lt;/a&gt;) - Prompt caching support with four cache strategies (&lt;code&gt;NONE&lt;/code&gt;, &lt;code&gt;SYSTEM_ONLY&lt;/code&gt;, &lt;code&gt;SYSTEM_AND_TOOLS&lt;/code&gt;, &lt;code&gt;CONVERSATION_HISTORY&lt;/code&gt;) offering 5-minute and 1-hour TTL options, delivering up to 90% cost reduction and improved latency for autonomous agent workflows&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;OpenAI GPT-5 Model Support&lt;/strong&gt; - Added support for the new GPT-5 model family (gpt-5, gpt-5-mini, gpt-5-nano, gpt-5-chat-latest) with verbosity parameter configuration and proper temperature constraint handling&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ElevenLabs Text-to-Speech&lt;/strong&gt; (&lt;a href=&quot;https://docs.spring.io/spring-ai/reference/1.1-SNAPSHOT/api/audio/speech/elevenlabs-speech.html&quot;&gt;documentation&lt;/a&gt;) - Complete text-to-speech integration thanks to &lt;a href=&quot;https://github.com/apappascs&quot;&gt;Alexandros Pappas&lt;/a&gt;, featuring &lt;code&gt;ElevenLabsTextToSpeechModel&lt;/code&gt; with streaming support, configurable voice selection, multiple audio formats, and &lt;code&gt;spring-ai-starter-model-elevenlabs&lt;/code&gt; for seamless Spring Boot integration&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Advanced Vector Store and RAG Capabilities&lt;/strong&gt; - Improved similarity scoring in MariaDB (&lt;a href=&quot;https://github.com/spring-projects/spring-ai/commit/891ef2aad29e8c4767eeab3a9f1e670949472102&quot;&gt;891ef2a&lt;/a&gt;), enhanced Weaviate configuration (&lt;a href=&quot;https://github.com/spring-projects/spring-ai/pull/3585&quot;&gt;#3585&lt;/a&gt;), and new VectorStoreRetriever interface (&lt;a href=&quot;https://github.com/spring-projects/spring-ai/pull/3827&quot;&gt;#3827&lt;/a&gt;, &lt;a href=&quot;https://docs.spring.io/spring-ai/reference/1.1-SNAPSHOT/api/vectordbs.html#_vectorstoreretriever_interface&quot;&gt;docs&lt;/a&gt;) - a read-only functional interface following the principle of least privilege for document retrieval operations&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Enhanced Multimodal Processing&lt;/strong&gt; - PDF document support for OpenAI chat models, standardized audio transcription interface across providers, and robust document validation for vector store operations enabling rich multimedia AI experiences&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Production-Ready Stability&lt;/strong&gt; - 76 critical bug fixes addressing community-reported issues, plus 32 documentation improvements and 12 security-focused dependency upgrades&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These improvements ensure that Spring AI continues to provide a robust and reliable foundation for building production-ready AI applications, with particular focus on the enhanced MCP integration that enables advanced AI agent capabilities.&lt;/p&gt;
&lt;h2 id=&quot;-model-context-protocol-deep-dive&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#-model-context-protocol-deep-dive&quot; aria-label=&quot; model context protocol deep dive permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;? Model Context Protocol Deep Dive&lt;/h2&gt;
&lt;p&gt;Spring AI 1.1.0-M1 includes significant improvements to AI agent capabilities through enhanced Model Context Protocol (MCP) integration. This release upgrades from MCP Java SDK v0.10.0 to v0.12.1, delivering highly requested features and important architectural improvements.&lt;/p&gt;
&lt;h3 id=&quot;streamable-http-transport-support&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#streamable-http-transport-support&quot; aria-label=&quot;streamable http transport support permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Streamable HTTP Transport Support&lt;/h3&gt;
&lt;p&gt;Introduces &lt;strong&gt;&lt;a href=&quot;https://modelcontextprotocol.io/specification/2025-06-18/basic/transports#streamable-http&quot;&gt;Streamable HTTP&lt;/a&gt;&lt;/strong&gt; Client and Server transports, which are highly requested capabilities since the MCP 2025-03-26 specification was released.&lt;/p&gt;
&lt;p&gt;The Streamable HTTP support enables:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://modelcontextprotocol.io/specification/2025-06-18/basic/transports#session-management&quot;&gt;Stateful Session Management&lt;/a&gt;&lt;/strong&gt; - Supports servers to establish stateful sessions&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://modelcontextprotocol.io/specification/2025-06-18/basic/transports#resumability-and-redelivery&quot;&gt;Resumability and Redelivery&lt;/a&gt;&lt;/strong&gt; - Stateful session management resumes broken connections, and redelivers messages that might otherwise be lost&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;&quot;&gt;Stateless Streamable HTTP&lt;/a&gt;&lt;/strong&gt; - Subset of the Streamable-HTTP specification that returns &lt;code&gt;application/json&lt;/code&gt;responses. Designed for simplified deployments where session state is not maintained between requests. The stateless transport is ideal for scaling microservices.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://docs.spring.io/spring-ai/reference/1.1-SNAPSHOT/api/mcp/mcp-server-boot-starter-docs.html#_mcp_server_boot_starters&quot;&gt;Multiple Transport Implementations&lt;/a&gt;&lt;/strong&gt; - JDK-based Servlet and Spring-based WebMVC and WebFlux Streamable-HTTP transport implementations:&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Protocol compliance&lt;/strong&gt; with MCP-Protocol-Version headers (2025-06-18 for streamable HTTP, 2024-11-05 for SSE)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;spring-boot-auto-configuration--annotation-programming-model&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#spring-boot-auto-configuration--annotation-programming-model&quot; aria-label=&quot;spring boot auto configuration  annotation programming model permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spring Boot Auto-Configuration &amp;#x26; Annotation Programming Model&lt;/h3&gt;
&lt;p&gt;Spring AI provides comprehensive Spring Boot integration for MCP through multiple specialized starters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Client Starters&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;spring-ai-starter-mcp-client-webflux&lt;/code&gt; Spring-based WebClient, STDIO, Streamable HTTP and SSE client transports&lt;/li&gt;
&lt;li&gt;&lt;code&gt;spring-ai-starter-mcp-client&lt;/code&gt; JDK-based HttpClient, STDIO, Streamable HTTP and SSE client transports&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Server Starters&lt;/strong&gt; - Multiple transport options including &lt;code&gt;spring-ai-starter-mcp-server&lt;/code&gt; (STDIO), &lt;code&gt;spring-ai-starter-mcp-server-webflux&lt;/code&gt; (reactive), &lt;code&gt;spring-ai-starter-mcp-server-webmvc&lt;/code&gt; (servlet-based)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Annotation Programming Model&lt;/strong&gt; - New declarative approach with &lt;code&gt;@McpTool&lt;/code&gt;, &lt;code&gt;@McpResource&lt;/code&gt;, &lt;code&gt;@McpPrompt&lt;/code&gt;, &lt;code&gt;@McpComplete&lt;/code&gt; for servers and &lt;code&gt;@McpLogging&lt;/code&gt;, &lt;code&gt;@McpSampling&lt;/code&gt;, &lt;code&gt;@McpElicitation&lt;/code&gt;, &lt;code&gt;@McpProgress&lt;/code&gt; for clients, eliminating boilerplate code&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Automatic Lifecycle Management&lt;/strong&gt; - Client/server initialization, resource cleanup, and configuration through Spring properties&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;enhanced-connection-management--customization&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#enhanced-connection-management--customization&quot; aria-label=&quot;enhanced connection management  customization permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enhanced Connection Management &amp;#x26; Customization&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;MCP-Compliant Keep-Alive&lt;/strong&gt; - Configurable periodic session pings with &lt;code&gt;KeepAliveScheduler&lt;/code&gt; utility for reliable long-running connections&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HTTP Request Customization APIs&lt;/strong&gt; - Built-in support for OAuth2 tokens, API keys, and custom request modifications through &lt;code&gt;HttpRequestCustomizer&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Transport Context Support&lt;/strong&gt; - Unified API for request context propagation between clients and servers, enabling authentication token flow and correlation ID tracking&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;production-ready-features&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#production-ready-features&quot; aria-label=&quot;production ready features permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Production-Ready Features&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Improved Error Handling&lt;/strong&gt; - Better compatibility with non-compliant servers and detailed error reporting&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Connection Reliability&lt;/strong&gt; - Enhanced session management, resumability, redelivery, automatic retries, and graceful degradation&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This MCP integration enhances Spring AI&apos;s capabilities for AI agent development, enabling developers to build sophisticated, tool-enabled AI applications with reliable patterns familiar to Spring developers.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Special thanks to the &lt;a href=&quot;https://github.com/modelcontextprotocol/java-sdk&quot;&gt;MCP Java SDK&lt;/a&gt; community&lt;/strong&gt; for their exceptional work on the underlying SDK that makes this integration possible:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/tzolov&quot;&gt;Christian Tzolov (@tzolov)&lt;/a&gt;, &lt;a href=&quot;https://github.com/chemicL&quot;&gt;Dariusz J?drzejczyk (@chemicL)&lt;/a&gt;, &lt;a href=&quot;https://github.com/Kehrlann&quot;&gt;Daniel Garnier-Moiroux (@Kehrlann)&lt;/a&gt;, &lt;a href=&quot;https://github.com/markpollack&quot;&gt;Mark Pollack (@markpollack)&lt;/a&gt;, &lt;a href=&quot;https://github.com/arcaputo3&quot;&gt;Richie Caputo (@arcaputo3)&lt;/a&gt;, &lt;a href=&quot;https://github.com/ilayaperumalg&quot;&gt;Ilayaperumal Gopinathan (@ilayaperumalg)&lt;/a&gt;, &lt;a href=&quot;https://github.com/jamesward&quot;&gt;James Ward (@jamesward)&lt;/a&gt;, &lt;a href=&quot;https://github.com/ZachGerman&quot;&gt;Zachary German (@ZachGerman)&lt;/a&gt;, &lt;a href=&quot;https://github.com/zekozhang&quot;&gt;@zekozhang&lt;/a&gt;, &lt;a href=&quot;https://github.com/denniskawurek&quot;&gt;@denniskawurek&lt;/a&gt;, &lt;a href=&quot;https://github.com/CrazyHZM&quot;&gt;@CrazyHZM&lt;/a&gt;, &lt;a href=&quot;https://github.com/marianogonzalez&quot;&gt;@marianogonzalez&lt;/a&gt;, &lt;a href=&quot;https://github.com/konczdev&quot;&gt;@konczdev&lt;/a&gt;, &lt;a href=&quot;https://github.com/He-Pin&quot;&gt;@He-Pin&lt;/a&gt;, &lt;a href=&quot;https://github.com/codeboyzhou&quot;&gt;@codeboyzhou&lt;/a&gt;, &lt;a href=&quot;https://github.com/codezjx&quot;&gt;@codezjx&lt;/a&gt;, &lt;a href=&quot;https://github.com/DamonBao&quot;&gt;@DamonBao&lt;/a&gt;, &lt;a href=&quot;https://github.com/jitokim&quot;&gt;@jitokim&lt;/a&gt;, &lt;a href=&quot;https://github.com/xiaowangzhixiao&quot;&gt;@xiaowangzhixiao&lt;/a&gt;, &lt;a href=&quot;https://github.com/FH-30&quot;&gt;@FH-30&lt;/a&gt;, &lt;a href=&quot;https://github.com/LucaButBoring&quot;&gt;@LucaButBoring&lt;/a&gt;, &lt;a href=&quot;https://github.com/epaga&quot;&gt;@epaga&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;-new-examples-and-enhanced-repository&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#-new-examples-and-enhanced-repository&quot; aria-label=&quot; new examples and enhanced repository permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;? New Examples and Enhanced Repository&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/spring-projects/spring-ai-examples&quot;&gt;Spring AI Examples repository&lt;/a&gt; has been significantly enhanced since the 1.0.1 release with comprehensive new examples and improved testing infrastructure. The repository now contains &lt;strong&gt;37 total modules&lt;/strong&gt; with &lt;strong&gt;24 modules featuring integration tests&lt;/strong&gt; and AI-powered validation.&lt;/p&gt;
&lt;h3 id=&quot;major-updates-since-101&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#major-updates-since-101&quot; aria-label=&quot;major updates since 101 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;Major Updates Since 1.0.1&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Comprehensive MCP Examples&lt;/strong&gt; - Extensive Model Context Protocol examples showcasing v0.12.1 capabilities&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AI-Powered Validation&lt;/strong&gt; - New integration testing framework with intelligent output validation&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Enhanced Documentation&lt;/strong&gt; - Improved setup instructions and example explanations&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Production Patterns&lt;/strong&gt; - Docker deployment examples and OAuth2 authentication patterns&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;new-mcp-examples-highlight&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#new-mcp-examples-highlight&quot; aria-label=&quot;new mcp examples highlight permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;New MCP Examples Highlight&lt;/strong&gt;&lt;/h3&gt;
&lt;h3 id=&quot;mcp-annotations-framework&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#mcp-annotations-framework&quot; aria-label=&quot;mcp annotations framework permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;MCP Annotations Framework&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/spring-projects/spring-ai-examples/tree/main/model-context-protocol/mcp-annotations&quot;&gt;mcp-annotations&lt;/a&gt;&lt;/strong&gt; - Complete annotation-driven MCP development examples featuring:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Server Implementation&lt;/strong&gt; - Weather tools, user profile resources, greeting prompts, and auto-completion using &lt;code&gt;@McpTool&lt;/code&gt;, &lt;code&gt;@McpResource&lt;/code&gt;, &lt;code&gt;@McpPrompt&lt;/code&gt;, &lt;code&gt;@McpComplete&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Client Implementation&lt;/strong&gt; - Progress tracking, logging, and sampling handlers using &lt;code&gt;@McpProgress&lt;/code&gt;, &lt;code&gt;@McpLogging&lt;/code&gt;, &lt;code&gt;@McpSampling&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mixed Annotation Patterns&lt;/strong&gt; - Both MCP annotations and Spring AI &lt;code&gt;@Tool&lt;/code&gt; annotations working together&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/spring-projects/spring-ai-examples/tree/main/model-context-protocol/mcp-annotations&quot;&gt;sampling/annotations&lt;/a&gt;&lt;/strong&gt; - Demonstrate the Model Context Protocol (MCP) Sampling capability in Spring AI using the annotation-based approach.&lt;/p&gt;
&lt;h3 id=&quot;dynamic-tool-management&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#dynamic-tool-management&quot; aria-label=&quot;dynamic tool management permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;Dynamic Tool Management&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/spring-projects/spring-ai-examples/tree/main/model-context-protocol/dynamic-tool-update&quot;&gt;dynamic-tool-update&lt;/a&gt;&lt;/strong&gt; - Demonstrates runtime tool registration and client detection:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Runtime Tool Addition&lt;/strong&gt; - Server dynamically exposes new mathematical operations alongside existing weather tools&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Client Tool Discovery&lt;/strong&gt; - Automatic detection and utilization of newly available tools&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Notification System&lt;/strong&gt; - Real-time updates when tool capabilities change&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;docker-mcp-gateway-integration&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#docker-mcp-gateway-integration&quot; aria-label=&quot;docker mcp gateway integration permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;Docker MCP Gateway Integration&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/spring-projects/spring-ai-examples/tree/main/model-context-protocol/brave-docker-agents-gateway&quot;&gt;brave-docker-agents-gateway&lt;/a&gt;&lt;/strong&gt; - Production deployment using Docker&apos;s MCP Gateway:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Docker Agents Gateway&lt;/strong&gt; - Uses Docker&apos;s &lt;code&gt;docker/agents_gateway:v2&lt;/code&gt; image for MCP server orchestration&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Brave Search Integration&lt;/strong&gt; - Natural language internet search through conversational interface using MCP protocol&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Containerized Architecture&lt;/strong&gt; - Complete Docker Compose setup with secrets management and SSE transport&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Spring Boot MCP Client&lt;/strong&gt; - Simplified client configuration connecting to dockerized MCP services&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;multiple-transport-examples&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#multiple-transport-examples&quot; aria-label=&quot;multiple transport examples permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;Multiple Transport Examples&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;The examples showcase all supported MCP transports:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;STDIO&lt;/strong&gt; - Process-based communication for local tool execution&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HTTP SSE&lt;/strong&gt; - Server-sent events for web-based real-time updates&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Streamable HTTP&lt;/strong&gt; - Modern HTTP streaming for scalable deployments&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Stateless Streamable HTTP&lt;/strong&gt; - Modern HTTP streaming for scalable deployments&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WebMVC &amp;#x26; WebFlux&lt;/strong&gt; - Both traditional servlet and reactive implementations&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These examples provide practical guidance for implementing MCP in production applications, from simple annotation-based tools to sophisticated dynamic agent systems. Each example includes comprehensive documentation, setup instructions, and integration tests.&lt;/p&gt;
&lt;h2 id=&quot;community&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#community&quot; aria-label=&quot;community permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h2&gt;
&lt;p&gt;The Spring AI community continues to grow and contribute in meaningful ways. This release includes contributions from community members who reported issues, submitted fixes, and provided valuable feedback.&lt;/p&gt;
&lt;p&gt;? &lt;strong&gt;Contributors&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Thanks to all contributors who made this release possible:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/apappascs&quot;&gt;Alexandros Pappas (apappascs)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/asw12&quot;&gt;asw12 (asw12)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/csbiy&quot;&gt;chani (csbiy)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tzolov&quot;&gt;Christian Tzolov (tzolov)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Kehrlann&quot;&gt;Daniel Garnier-Moiroux (Kehrlann)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/dafriz&quot;&gt;David Frizelle (dafriz)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ddobrin&quot;&gt;ddobrin (ddobrin)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/garethjevans&quot;&gt;Gareth Evans (garethjevans)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/HeeChanN&quot;&gt;heechann (HeeChanN)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Hyeri1ee&quot;&gt;Hyeri1ee (Hyeri1ee)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ilayaperumalg&quot;&gt;Ilayaperumal Gopinathan (ilayaperumalg)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jinlee1703&quot;&gt;Jinwoo Lee (jinlee1703)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/l-trotta&quot;&gt;Laura Trotta (l-trotta)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/eeaters&quot;&gt;Link (eeaters)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/little-huang&quot;&gt;little_huang (little-huang)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/markpollack&quot;&gt;Mark Pollack (markpollack)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/MartinDai&quot;&gt;MartinDai (MartinDai)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nicolaskrier&quot;&gt;Nicolas Krier (nicolaskrier)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/alxkm&quot;&gt;Oleksandr Klymenko (alxkm)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Hiosdra&quot;&gt;Oskar Drozda (Hiosdra)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rafaelrddc&quot;&gt;Rafael Cunha (rafaelrddc)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/robinmayerhofer&quot;&gt;robinmayerhofer (robinmayerhofer)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/seongm1n&quot;&gt;seongm1n (seongm1n)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/shahbazaamir&quot;&gt;Shahbaz Aamir (shahbazaamir)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/shishuiwuhen2009&quot;&gt;shishuiwuhen2009 (shishuiwuhen2009)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sobychacko&quot;&gt;Soby Chacko (sobychacko)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sunyuhan1998&quot;&gt;Sun Yuhan (sunyuhan1998)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/wilocu&quot;&gt;wilocu (wilocu)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Yornii&quot;&gt;Yang Li (Yornii)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/quaff&quot;&gt;Yanming Zhou (quaff)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/YunKuiLu&quot;&gt;YunKui Lu (YunKuiLu)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;how-can-you-help&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#how-can-you-help&quot; aria-label=&quot;how can you help permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How can you help?&lt;/h3&gt;
&lt;p&gt;If you&apos;re interested in contributing, check out the &lt;a href=&quot;https://github.com/spring-projects/spring-ai/labels/ideal-for-contribution&quot;&gt;&quot;ideal for contribution&quot; tag&lt;/a&gt; in our issue repository. For general questions, please ask on &lt;a href=&quot;https://stackoverflow.com&quot;&gt;Stack Overflow&lt;/a&gt; using the &lt;a href=&quot;https://stackoverflow.com/tags/spring-ai&quot;&gt;&lt;code&gt;spring-ai&lt;/code&gt; tag&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;whats-next&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#whats-next&quot; aria-label=&quot;whats next permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What&apos;s Next&lt;/h2&gt;
&lt;p&gt;The Spring AI team continues to focus on improving AI application development with Spring Boot. Based on the momentum from 1.1.0-M1, upcoming releases will build on these foundations with enhanced capabilities and developer experience improvements.&lt;/p&gt;
&lt;p&gt;For the latest updates and to contribute to the project, visit our &lt;a href=&quot;https://github.com/spring-projects/spring-ai&quot;&gt;GitHub repository&lt;/a&gt; or join the discussion in our community channels.&lt;/p&gt;
&lt;h2 id=&quot;resources&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#resources&quot; aria-label=&quot;resources permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://spring.io/projects/spring-ai/&quot;&gt;Project Page&lt;/a&gt; | &lt;a href=&quot;https://github.com/spring-projects/spring-ai&quot;&gt;GitHub&lt;/a&gt; | &lt;a href=&quot;https://github.com/spring-projects/spring-ai/issues&quot;&gt;Issues&lt;/a&gt; | &lt;a href=&quot;https://docs.spring.io/spring-ai/docs/1.1.0-M1/reference/html&quot;&gt;Documentation&lt;/a&gt; | &lt;a href=&quot;https://stackoverflow.com/questions/tagged/spring-ai&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[This Week in Spring - September 9th, 2025 ]]></title><link>https://spring.io/blog/2025/09/09/this-week-in-spring-september-9th-2025</link><guid isPermaLink="true">https://spring.io/blog/2025/09/09/this-week-in-spring-september-9th-2025</guid><dc:creator><![CDATA[joshlong]]></dc:creator><pubDate>Tue, 09 Sep 2025 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Hi, Spring fans! Welcome to another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;! I am home, ensconced in my studio here in somewhat sunny San Francisco, California, relaxing and trying to catch up on stuff I missed. As always, there&apos;s a ton! So let&apos;s dive right into it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Some of the amazing features that were in Spring Retry and Spring Cloud have now been refined, enhanced, augmented, and put &lt;a href=&quot;https://spring.io/blog/2025/09/09/core-spring-resilience-features&quot;&gt;into the core Spring Framework&lt;/a&gt;. Meet the new resilience features -  &lt;code&gt;@ConcurrencyLimit&lt;/code&gt;, &lt;code&gt;@Retryable&lt;/code&gt;, and &lt;code&gt;RetryTemplate&lt;/code&gt; - in Spring Framework!&lt;/li&gt;
&lt;li&gt;the new &lt;a href=&quot;https://spring.io/blog/2025/09/09/spring-ai-1-1-0-M1-available-now&quot;&gt;Spring AI 1.1.0-M1 is now available! Huzzah!&lt;/a&gt; This release features significantly improved MCP SDK upgrades, including a streamable HTTP transport, &lt;code&gt;HttpClient&lt;/code&gt;/&lt;code&gt;WebClient&lt;/code&gt; support, transport context APIs, enhanced resource template filtering, and MCP-compliant protocol version headers. It also features the new MCP annotation component model support. And, obviously, there are integrations and updates for all manner of new models; huge improvements to the vector store and RAG capabilities, and more.&lt;/li&gt;
&lt;li&gt;In last week&apos;s installment of &lt;em&gt;A Bootiful Podcast&lt;/em&gt;, I was thrilled to sit down and talk &lt;a href=&quot;https://spring.io/blog/2025/09/04/a-bootiful-podcast-ryan-baxter&quot;&gt;to Spring Cloud legend Ryan Baxter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The road to Spring Framework 7 and Spring Boot 4 is twisty and exciting! &lt;a href=&quot;https://spring.io/blog/2025/09/02/road_to_ga_introduction&quot;&gt;Follow the journey here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A bit of clickbait, but still worth a read: you can &lt;a href=&quot;https://medium.com/@kp9810113/i-doubled-my-spring-boot-apps-speed-with-just-5-jvm-flags-d02f077ff1a6&quot;&gt;dramatically improve your Java program&apos;s startup with just some virtual machine options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;I had no idea &lt;a href=&quot;https://bytebytego.com/guides/uber-tech-stack/&quot;&gt;Uber used Spring Boot??&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Our friend over at SivaLabs is at it again, this time with &lt;a href=&quot;https://www.youtube.com/watch?v=lqQ_NL4y5Qg&quot;&gt;a nice tutorial on Embabel&lt;/a&gt;, the agentic AI framework built on top of Spring AI&lt;/li&gt;
&lt;li&gt;Java is becoming the language &lt;a href=&quot;https://www.youtube.com/watch?v=Gz7Or9C0TpM&quot;&gt;we all knew it could be!&lt;/a&gt;. The future of Java looks &lt;em&gt;amazing&lt;/em&gt; and I can&apos;t wait for it!&lt;/li&gt;
&lt;li&gt;speaking of Java, did you see &lt;a href=&quot;https://openjdk.org/jeps/401&quot;&gt;that they submitted Project Valhalla?&lt;/a&gt; This discussion mentions Java 25, which makes me think it might be the first version &lt;a href=&quot;https://openjdk.org/jeps/401&quot;&gt;to have value classes and objects available as a preview feature&lt;/a&gt;. If that&apos;s the case, then color me giddy!&lt;/li&gt;
&lt;li&gt;This is interesting. Lightrun is a &apos;developer observability platform&apos; that I confess I hadn&apos;t heard of before. Looks awesome! You can spelunk the JVM with ease. This &lt;a href=&quot;https://www.baeldung.com/lightrun-debug-spring-method-annotations&quot;&gt;article uses Lightrun to understand what Spring&apos;s &lt;code&gt;@Transactional&lt;/code&gt; does&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The AI talk that James Ward and I just &lt;a href=&quot;https://vimeo.com/1115917659&quot;&gt;gave at JavaZone&lt;/a&gt; is now online&lt;/li&gt;
&lt;li&gt;The roving look at the vast and &lt;a href=&quot;https://vimeo.com/1115787476&quot;&gt;wonderful world of Springdom that James Ward and I gave at JavaZone is now available online&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.broadcom.com/blog/building-what-matters-adib-saikali-on-innovation-why-developer-happiness-comes-first&quot;&gt;nice to see our colleague Adib Saikali recognized&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;I love this discussion over on InfoQ: &lt;a href=&quot;https://www.infoq.com/podcasts/observability-java-micrometer/&quot;&gt;Observability in Java with Micrometer - a Conversation with Marcin Grzejszczak&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Loiane Groner&apos;s talk looking at &lt;a href=&quot;https://www.infoq.com/presentations/spring-ai-framework/&quot;&gt;Spring AI from InfoQ Dev Summit is now available online&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;speaking of startup time optimization, did you &lt;a href=&quot;https://www.linkedin.com/pulse/optimizing-spring-boot-startup-time-comparative-analysis-cebula-hhuqf&quot;&gt;see this rather exhaustive look?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item></channel></rss>